%% FUNCTION CALL - METABOLIC FLUX RATES
function [F,P,U] = callflux(y,Vmax,Km,P,U,id)

% %Allocation
% fluxrate = zeros(6,25);
F = zeros(1,25);
rs = [0,0]; ps = [0,0];
rs2 = [0,0]; ps2 = [0,0];

%Phosphorylation and redox states
    rs(1) = (y(16)/y(17))/(Km(23)+y(16)/y(17)); 
    rs(2) = (y(17)/y(16))/(Km(24)+y(17)/y(16)); 
    ps(1) = (y(18)/y(19))/(Km(25)+y(18)/y(19));
    ps(2) = (y(19)/y(18))/(Km(26)+y(19)/y(18));
    ps2(2)= ((y(19)/y(18))^2.0)/(Km(26)^2.0+(y(19)/y(18))^2.0);
    
%Flux values 
%Flux = Vmax*[Ci/(Km + Ci)][(Ci/Cj)/(k + Ci/Cj)]
%Control is based on Michaelis-Menten kinetics
    F(1) = Vmax(1)*ps(1)*(y(1)/Km(1))/(1.0+y(1)/Km(1));
    F(2) = Vmax(2)*ps2(2)*(y(10)/Km(10))/(1.0+y(10)/Km(10));
    F(3) = Vmax(3)*rs(1)*ps(2)*(y(12)*y(20)/(Km(12)*Km(20)))/(1.0+(y(12)/Km(12))+(y(20)/Km(20))+(y(12)*y(20)/(Km(12)*Km(20))));
    F(4) = Vmax(4)*ps(1)*rs(2)*y(2)/(Km(2)+y(2)); 
    F(5) = Vmax(5)*y(12)/(Km(12)+y(12));
    F(6) = Vmax(6)*y(10)/(Km(10)+y(10));
    F(7) = Vmax(7)*ps(1)*y(10)/(Km(10)+y(10)); 
    F(8) = Vmax(8)*ps2(2)*(y(11)*y(20)/(Km(11)*Km(20)))/(1.0+(y(11)/Km(11))+(y(20)/Km(20))+(y(11)*y(20)/(Km(11)*Km(20)))); 
        
    switch id
        case 3   
            F(9)  = Vmax(9)*(y(2)/(0.6+y(2)))*(y(17)/y(16))/(Km(24)*0.1+y(17)/y(16));
            F(10) = Vmax(10)*(y(3)/(17+y(3)))*(y(16)/y(17))/(Km(23)+y(16)/y(17));
            F(16) = Vmax(16)*rs(1)*(y(2)*y(15)/(0.065*Km(15)))/(1.0+(y(2)/0.065)+(y(15)/Km(15))+(y(2)*y(15)/(0.065*Km(15))));    
        otherwise
            F(9)  = Vmax(9)*rs(2)*y(2)/(Km(2)+y(2)); 
            F(10) = Vmax(10)*rs(1)*y(3)/(Km(3)+y(3));
            F(16) = Vmax(16)*rs(1)*(y(2)*y(15)/(Km(2)*Km(15)))/(1.0+(y(2)/Km(2))+(y(15)/Km(15))+(y(2)*y(15)/(Km(2)*Km(15))));
    end 
    F(11) = Vmax(11)*ps(1)*y(5)/(Km(5)+y(5)); 
    F(12) = Vmax(12)*rs(2)*y(12)/(Km(12)+y(12)); 
    F(13) = Vmax(13)*rs(1)*y(13)/(Km(13)+y(13)); 
    F(14) = Vmax(14)*y(2)/(Km(2)+y(2));
    F(15) = Vmax(15)*y(4)/(Km(4)+y(4));
    F(17) = Vmax(17)*rs(1)*(y(6)*y(15)/(Km(6)*Km(15)))/(1.0+(y(6)/Km(6))+(y(15)/Km(15))+(y(6)*y(15)/(Km(6)*Km(15))));
    F(18) = Vmax(18)*rs(2)*ps(1)*y(14)/(Km(14)+y(14)); 
    F(19) = Vmax(19)*y(7)/(Km(7)+y(7));
    F(20) = Vmax(20)*ps(1)*(y(13)*y(6)/(Km(13)*Km(6)))/(1.0+(y(6)/Km(6))+(y(13)/Km(13))+(y(13)*y(6)/(Km(13)*Km(6))));
    F(21) = Vmax(21)*rs(1)*ps(2)*(y(14)*y(20)/(Km(14)*Km(20)))/(1.0+(y(14)/Km(14))+(y(20)/Km(20))+(y(14)*y(20)/(Km(14)*Km(20))));
    F(22) = Vmax(22)*rs(2)*ps(2)*(y(8)*y(20)/(Km(8)*Km(20)))/(1.0+(y(8)/Km(8))+(y(20)/Km(20))+(y(8)*y(20)/(Km(8)*Km(20))));
    F(23) = Vmax(23)*ps(2)*y(21)/(Km(21)+y(21)); 
    F(24) = Vmax(24)*ps(1)*y(22)/(Km(22)+y(22));
    F(25) = Vmax(25)*y(18)/(Km(18)+y(18));
    
    %Substrate production 
    P(1) = F(6);
    P(2) = F(3) + F(10) + F(15); 
    P(3) = F(9);
    P(4) = F(14);
    P(5) = F(19);
    P(6) = 3.0*F(19) + F(18)/8.0;
    P(7) = F(20)/3.0;
    P(8) = 0.0;
    P(9) = F(16) + 2.0*F(21); 
    P(10) = F(1) + F(8) + F(5)/2.0;
    P(11) = F(7);
    P(12) = 2.0*F(2) + F(4) + F(13);
    P(13) = F(11)+F(12);
    P(14) = F(16) + 8.0*F(17);
    P(15) = F(21) + F(18);
    P(16) = F(4) + F(9) + 2.0*F(22) + F(12) + 14.0*F(18)/8.0;
    P(17) = F(3) + F(10) + F(16) + 4.0*F(21) + 14.0*F(17) + F(13);
    P(18) = 2.0*F(3) + F(21) + 6.0*F(22) + F(23);
    P(19) = F(1) + F(2) + 3.0*F(4) + F(7) + F(11) + 2.0*F(17) + 7.0*F(18)/8.0 + 2.0*F(20) + F(25) + F(24);
    P(20) = 2.0*F(4) + F(5)/2.0 + F(6) + 2.0*F(7) + 2.0*F(17) + 7.0*F(18)/8.0 + 7.0*F(20)/3.0 + F(25);
    P(21) = F(24);
    P(22) = F(23);
    
    %Substrate utilization 
    U(1) = F(1);
    U(2) = F(4) + F(9) + F(14) + F(16);
    U(3) = F(10);
    U(4) = F(15);
    U(5) = F(11);
    U(6) = F(17) + F(20);
    U(7) = F(19);
    U(8) = F(22);
    U(9) = 0.0;
    U(10) = F(2) + F(6) + F(7);
    U(11) = F(8);
    U(12) = F(3) + F(5) + F(12);
    U(13) = F(13) + F(20)/3.0;
    U(14) = F(21) + F(18);
    U(15) = F(16) + 8.0*F(17);
    U(16) = F(3) + F(10) + F(16) + 4.0*F(21) + 14.0*F(17) + F(13);
    U(17) = F(4) + F(9) + 2.0*F(22) + F(12) + 14.0*F(18)/8.0;
    U(18) = F(1) + F(2) + 3.0*F(4) + F(7) + F(11) + 2.0*F(17)+ 7.0*F(18)/8.0 + 2.0*F(20) + F(25) + F(24);
    U(19) = 2.0*F(3) + F(21) + 6.0*F(22) + F(23);
    U(20) = F(3) + F(8) + F(21) + 6.0*F(22);
    U(21) = F(23);
    U(22) = F(24);
end